---
- name: Init git submodules
  shell: git submodule init
  args:
    chdir: "{{ ansible_env.HOME }}/src/"
  sudo: yes

- name: Populate git submodules
  shell: git submodule update
  args:
    chdir: "{{ ansible_env.HOME }}/src/"
  sudo: yes

- name: Update git repos with latest
  shell: git fetch --all --prune
  args:
    chdir: "{{ ansible_env.HOME }}/src/{{ item }}"
  with_items:
    - on-core
    - on-tasks
    - on-http
    - on-tftp
    - on-dhcp-proxy
    - on-taskgraph
    - on-syslog
  sudo: yes

- name: Reset to the branch specified
  shell: git reset --hard {{ branch }}
  when: branch is defined
  args:
    chdir: "{{ ansible_env.HOME }}/src/{{ item }}"
  with_items:
    - on-core
    - on-tasks
    - on-http
    - on-tftp
    - on-dhcp-proxy
    - on-taskgraph
    - on-syslog
  sudo: yes

- name: clean any local installation
  shell: './src/scripts/clean_all.bash'
  args:
    chdir: "{{ ansible_env.HOME }}"

- name: Link and install locally
  shell: './src/scripts/link_install_locally.bash'
  args:
    chdir: "{{ ansible_env.HOME }}"

- name: Make common static directory
  file: path={{ ansible_env.HOME }}/src/on-http/static/http/common state=directory

- name: Npm install apidoc
  shell: 'npm install apidoc'
  args:
    chdir: "{{ ansible_env.HOME }}/src/on-http"

- name: Render API docs for local reference
  shell: 'npm run apidoc'
  args:
    chdir: "{{ ansible_env.HOME }}/src/on-http"
